ARG=$(seq 1 100 | awk 'BEGIN {srand(); ORS=" "} {a[NR]=$0} END {for (i=100; i>1; i--) {j=int(rand()*i)+1; t=a[i]; a[i]=a[j]; a[j]=t;} for (i=1; i<=100; i++) print a[i]}') ; ./push_swap $ARG | wc -l;
ARG=$(seq 1 100 | awk 'BEGIN {srand(); ORS=" "} {a[NR]=$0} END {for (i=100; i>1; i--) {j=int(rand()*i)+1; t=a[i]; a[i]=a[j]; a[j]=t;} for (i=1; i<=100; i++) print a[i]}') ; ./push_swap $ARG | ./checker $ARG
ARG=$(seq 1 500 | awk 'BEGIN {srand(); ORS=" "} {a[NR]=$0} END {for (i=100; i>1; i--) {j=int(rand()*i)+1; t=a[i]; a[i]=a[j]; a[j]=t;} for (i=1; i<=500; i++) print a[i]}') ; ./push_swap $ARG | wc -l;
ARG=$(seq 1 500 | awk 'BEGIN {srand(); ORS=" "} {a[NR]=$0} END {for (i=100; i>1; i--) {j=int(rand()*i)+1; t=a[i]; a[i]=a[j]; a[j]=t;} for (i=1; i<=500; i++) print a[i]}') ; ./push_swap $ARG | ./checker $ARG